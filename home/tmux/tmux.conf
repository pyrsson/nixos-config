# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-z
bind-key C-z send-prefix

set -ga update-environment ' SSH_AGENT_PID SSH_AUTH_SOCK WSL_INTEROP'

# use vi mode keys
set-window-option -g mode-keys vi

# keybinds
bind-key r source-file "~/.config/tmux/tmux.conf"

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

unbind .
bind-key - split-pane -v -c "#{pane_current_path}"
bind-key V split-window -vf -c "#{pane_current_path}"
bind-key . split-pane -h -c "#{pane_current_path}"
bind-key H split-window -hf -c "#{pane_current_path}"

# vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'M-Left' if-shell "$is_vim" 'send-keys M-Left'  'select-pane -L'
bind-key -n 'M-Down' if-shell "$is_vim" 'send-keys M-Down'  'select-pane -D'
bind-key -n 'M-Up' if-shell "$is_vim" 'send-keys M-Up'  'select-pane -U'
bind-key -n 'M-Right' if-shell "$is_vim" 'send-keys M-Right'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-w' if-shell \"$is_vim\" 'send-keys M-w'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-w' if-shell \"$is_vim\" 'send-keys M-w'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-Left' select-pane -L
bind-key -T copy-mode-vi 'M-Down' select-pane -D
bind-key -T copy-mode-vi 'M-Up' select-pane -U
bind-key -T copy-mode-vi 'M-Right' select-pane -R

# bind-key -n M-Left select-pane -L
# bind-key -n M-Right select-pane -R
# bind-key -n M-Up select-pane -U
# bind-key -n M-Down select-pane -D

bind-key S set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# session management
size="70%"
bind C-j popup -E -S "fg=blue" -w$size -h$size "ta"
bind C-w popup -E -S "fg=blue" -w$size -h$size "ta ~/work"
bind C-g popup -E -S "fg=blue" -w$size -h$size "ta ~/github"
bind C-v popup -E -S "fg=blue" -w$size -h$size "ta ~/vasttrafik"
bind -n M-N switch-client -n
bind -n M-P switch-client -p
bind -n M-L switch-client -l
bind -n M-l switch-client -l
bind -n M-m switch-client -t main
bind -n M-C if-shell 'has-session -t cluster-config 2>/dev/null' 'switch-client -t cluster-config' 'new-session -A -s cluster-config -c ~/vasttrafik/cluster-config \; split-window -d -l 12 -c "#{pane_current_path}"'
# bind -n M-C new-session -A -s cluster-config -c ~/vasttrafik/cluster-config \; split-window -d -l 12 -c "#{pane_current_path}"

# copy mode
unbind [
unbind ]
unbind p
bind-key v copy-mode
bind-key p paste-buffer
unbind-key -T copy-mode-vi 'v'
unbind-key -T copy-mode-vi 'Enter'
unbind-key -T copy-mode-vi 'Space'
bind-key -T copy-mode-vi 'v' send -X begin-selection\; send -X rectangle-off
bind-key -T copy-mode-vi 'C-v' send -X begin-selection\; send -X rectangle-on
bind-key -T copy-mode-vi 'y' send -X copy-selection

# session management
bind-key C-l switch-client -l
bind-key C-s command-prompt -p "Create session:" "new -s %1 -A"

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on
set-window-option -g xterm-keys on
set -g focus-events on

# scrollback
set -g history-limit 10000

######################
### DESIGN CHANGES ###
######################

set -g default-terminal "tmux-256color"
set -g base-index 1
setw -g pane-base-index 1
# set-option -sa terminal-features ',*:RGB'
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g detach-on-destroy off

# colors
# bg=colour233
# activefg=colour32
# activebg=colour235
# inactivebg=colour233
# inactivefg=colour25
# activehl=colour214
# inactivehl=colour214
# stats=colour254

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
# setw -g clock-mode-colour colour5
# setw -g mode-style 'fg=colour214 bg=colour8 bold'

# panes
# set -g pane-active-border-style 'fg=colour214 bold'
# set -g pane-border-style 'fg=colour24 bold'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-interval 5
# set -g status-style 'bg=colour233'
# set -g status-left ''
# set -g status-right '#(gitmux "#{pane_current_path}") #[bg=#{activebg} fg=#{activefg}] #(whoami)@#h '
# set -g status-right-length 100
# set -g status-left-length 20
# set -g window-status-separator ''

# setw -g window-status-current-style 'bold'
# setw -g window-status-current-format '#[fg=#{activefg} bg=#{activebg}] #I#[fg=#{activehl}] |#[fg=#{activefg}] #W#[fg=#{activehl}]#F '
#
# setw -g window-status-style 'dim'
# setw -g window-status-format '#[fg=#{inactivefg} bg=#{inactivebg}] #I#[fg=#{inactivehl}] |#[fg=#{inactivefg}] #W#[fg=#{inactivehl}]#F '
#
# setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

set -g automatic-rename on
set -g automatic-rename-format '#{pane_current_command}: #{b;s/simon|spersson/~/:pane_current_path}'

# messages
# set -g message-style 'fg=colour7 bg=colour237 bold'

set -g escape-time 10

source-file ~/.local/share/nvim/lazy/tokyonight.nvim/extras/tmux/tokyonight_moon.tmux
set -g status-right "#(gitmux '#{pane_current_path}') #[fg=#1e2030,bg=#1e2030,nobold,nounderscore,noitalics]#[fg=#82aaff,bg=#1e2030] #{prefix_highlight} #[fg=#3b4261,bg=#1e2030,nobold,nounderscore,noitalics]#[fg=#82aaff,bg=#3b4261] %Y-%m-%d  %H:%M #[fg=#82aaff,bg=#3b4261,nobold,nounderscore,noitalics]#[fg=#1b1d2b,bg=#82aaff,bold] #h "
# set -g status-right '#(gitmux "#{pane_current_path}")'

# plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# # set -g @plugin "arcticicestudio/nord-tmux"
# run '~/.tmux/plugins/tpm/tpm'
